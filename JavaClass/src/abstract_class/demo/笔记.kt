package abstract_class.demo

/*抽象类：
什么是抽象类？
    抽象类无法实例化，无法创建对象
    抽象类是类和类之间有共同特征，将这些共同特征的类在进一步抽象形成了抽象类，由于类本身是不存在的，所以抽象类无法创建对象
    

抽象类属于什么类型？
    抽象类也属于引用数据类型

抽象类怎么定义？
    语法：
        修饰符列表  abstract class  类名{
            类体；
        }
        
        抽象类抽象类无法实例化，无法创建对象，所以抽象类是用来被‘子类’继承的
        final和abstract 不能联合使用
        抽象类的子类还可以是抽象类
        抽象类虽然无法实例化吗，但是抽象类里面有构造方法，这个构造方法是供子类使用的

抽象类关联到一个抽象方法的概念；
    抽象方法表示没有实现的方法，没有方法体的方法；例如：public abstract void A()
    抽象方法的特点是：没有方法体，以分号结尾。前面修饰符列表中有abstract关键字

抽象类中不一定要有抽象方法，但是抽象方法必须出现在抽象类中，抽象类中也可以有非抽象的方法
抽象类中的抽象方法必须被实现，子类继承的话必须要重写父类的抽象方法
（一个非抽象的类继承抽象类，必须抽象类中的抽象方法给实现了，重写了）
（一个抽象的类继承抽象类，抽象类中的抽象方法可以不需要实现，重写）

面向抽象变成，不需要面向具体变成，降低程序的耦合度，提高程序的扩展力，这种变成思想符合OCP原则；












 */