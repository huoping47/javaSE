package array_class.demo
/*                                          数组
    1、java语言中的数组是一种引用数据类型，不属于基本数据类型，数组的父类是Object
    2、数组实际上是一个容器，可以同时容纳多个元素（数组是一个数据的集合）数组：字面意思是‘一组数据’
    3、数组当中可以存储基本类型的数据，也可以存储引用数据类型的数据
    4、数据因为是引用数据类型，所以数组对象是存储在堆内存当中
    5、数组当中如果存储的是‘java对象’的话，实际上存储的是对象的引用（内存地址），数组中不能直接存储java对象
    6、数组一旦创建，在java中规定，长度不可变【数组长度不可变】
    7、数组的分类：一维数组，二维数组，三维数组，多维数组......（一维数组较多，二维数组偶尔使用）
    8、所有的数组对象都有length属性，用来获取数组中元素的个数
    9、java中的数组要求数组中的元素的类型统一，比如int类型数组只能存储int类型，引用类型数组只能存储引用类型
    10、数组在内存方面存储的时候，数组中的元素内存地址（存储的每一个元素都是有规则的，挨着排序的）是连续的，内存地址连续
    这是数组存储元素的特点，数组是一种简单数据结构
    11、所有的数组都是拿’第一个小方框的内存地址‘作为整个数组对象的内存地址
    (数组中首元素的内存地址作为整个数组对象)
    12、数组中每一个元素都是有下标的，下标从0开始，以1递增，最后一个元素的下标是：length-1
    下标非常重要，因为我们对数组中元素进行’存取‘的时候，都需要通过下标来存取
    12、数组的这种数据结构的优点和缺点是什么？
    优点：查询/查找/检索某个下标上的元素时效率极高，可以说是查询效率最高的一个数据结构
    为什么检索效率高？
        第一：每一个元素的内存地址在空间存储上是连续的
        第二：每一个元素类型相同，所以占用空间大小一样
        第三：知道第一个元素内存地址，知道每一个元素占用空间的大小，又知道下标，所以通过一个数学表达式就可以计算
        出某个下标上元素的内存地址，直接通过内存地址定位元素，所以数组的检索效率是最高的
        数组中存储100个元素，或者存储100玩个元素，在元素查询/检索方面，效率是相同的，因为数组中元素查找的时候
        不会一个一个找，是用过数学表达式计算出来的（算出一个内存地址，直接定位）
    缺点：
    第一：由于为了保证数组中每个元素的内存地址连续，所以在数组上随机删除或者增加元素的时候，效率较低，因为随机增删
    元素会涉及到后面元素统一向前或者向后位移的操作
    第二：数组不能存储大数据量，为什么？
        因为很难再内存空间上找到一块特别大的连续的内存空间
    注意：对于数组中最后一个元素的增删是没有效率影响的
    14、怎么声明或者定义一个数组：
        int[] array1;
        double[] array2;
        String[] array3;
    15、怎么初始化一个一维数组呢？
        包括两种方式：静态初始化一维数组，动态初始化一维数组
        静态初始化语法格式：
            int[] array={100,200,3000}；
        动态初始化语法格式：
            int[] array = new int[5]  //这里的5表示数组的元素个数，初始化一个5个长度的int类型数组，每个元素默认值为0
            String[] names = new String[6]; 初始化6个长度的String类型数组，每个元素默认值null
    16、什么时候采用动态初始化方式，什么时候采用静态初始化方式呢？
        当你创建数组的时候，确定数组中存储哪些具体的元素时，采用静态初始化方式
        当你创建数组的时候，不确定将来数组中存储哪些数据，你可以采用动态初始化的方式，预先分配内存空间



二维数组：
1、二维数组其实就是一个特殊的一维数组，特殊在这个一维数组当中的每一个元素时一个一维数组
2、二维数组静态初始化
    int[][] array = {{10,20,30},{1,2,3},{50,40,60},{12,13,14,15}};


数组中常见的算法：
    排序算法：
        冒泡排序
        选择排序
    查找算法：
        二分法查找
    算法实际上在java中不需要精通，因为java中已经封装好了，要排序就调用方法就行
    数组元素查找有两种方式：
        第一种方式：一个一个挨着找，知道找到为止
        第二种方式：二分法查找（算法），这个效率较高



 */