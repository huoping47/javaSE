package try_catch.demo
/*
 异常捕捉
 什么是异常？java中的异常处理机制有什么用？
 程序执行过程中发生了不正常的情况，而这种不正常的情况叫做：异常
 java语言是很完善的语言，提供了异常的处理方式，一下程序执行剁成中出现了不正常情况，java把该异常
 信息打印到控制台输出，供程序员参考
 什么是异常:程序执行过程中的不正常情况
 异常的作用：增强程序的健壮性

 java语言中异常是以什么形式存在的呢？
 1、异常在java中以类形式存在，每一个异常类都可以创建对象
 2、异常对应的现实生活中是怎样的？
 火灾（异常类）

 java语言中对异常的处理包括两种方式：
 第一种方式：在方法声明的位置上，使用throws关键字，抛给上一级
 第二种方式：使用try..catch语句进行异常的捕捉

 编译时异常又叫受检异常和受控异常
 运行时异常又叫未受检异常和非受控异常

 异常捕捉中的两个重要的方法
 Exception.getMessage();获取异常简单的描述信息
 Exception.printStackTrace() ;打印异常追踪的堆栈信息

 查看异常的追踪信息，该怎么看？可以快速的调试程序
 异常信息追踪信息，从上往下一行看
 但是需要注意的是：SUM写的代码不需要看（看包名，就知道是自己的还是SUN的），主要的问题是出现在自己编写的代码上。

 关于try..catch中的finally字句：
 1、在finally子句中的代码是最后执行的，并且是一定会执行的，即使try语句中的代码出现了异常
 finally子句必须和try一起出现，不能单独编写

 2、finally语句通常使用在哪些情况呢？
    通常在finally语句块中完成资源的释放/关闭
    因为finally子句中的代码比较有保障
    即使try语句块中的代码出现异常，finally中代码也会正常执行















*/










