<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--        mapper是整个文件的大标签,用来开始和结束xml文件的
                 属性:
                       namespace:指定明明空间(相当于包名),用来区分不同mapper.xml文件中相同的id属性-->
<mapper namespace="zar">
    <!--    完成查询全部用户的功能
            List<User> getAll();
                resultType:指定查询返回结果集的类型,如果是集合,则必须是泛型的类型
                parameterType:如果有参数,则通过他来指定参数的类型
    -->
    <select id="getAll" resultType="userTest">
        select id, username, password, sex, age
        from user
    </select>
    <!--    根据学生的id查询数据  如果查询有参数的话需要加上parameterType属性-->
    <select id="getById" parameterType="int" resultType="userTest">
        select id, username, password, sex, age
        from user
        where id = #{id}
    </select>
    <!--    模糊查询学生的姓名-->
    <select id="getByteName" parameterType="string" resultType="userTest">
        select id, username, password, sex, age
        from user
        where username like '%${name}%'
    </select>

    <!--    新增数据-->
    <select id="insert" parameterType="userTest">
        insert into user(username, password, sex, age)
        values (#{userName}, #{passWord}, #{sex}, #{age})
    </select>

    <!--    删除数据-->
    <select id="delete" parameterType="int">
        delete
        from user
        where id = #{id}
    </select>

    <!--    更新数据-->
    <select id="update" parameterType="userTest">
        update user
        set username=#{userName},
        password=#{passWord},
        sex=#{sex},
        age=#{age}
        where id = #{id}
    </select>

</mapper>